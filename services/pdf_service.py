from fpdf import FPDF
import base64
import tempfile
import streamlit as st


def create_pdf(invoice_data):
    """
    Create a professional-looking invoice summary PDF from extracted JSON data.
    """

    try:
        pdf = FPDF()
        pdf.add_page()

        # --- Header ---
        pdf.set_font("Helvetica", "B", 18)
        pdf.cell(0, 12, "INVOICE SUMMARY", ln=True, align="C")
        pdf.ln(10)

        # --- Vendor Info ---
        pdf.set_font("Helvetica", "B", 12)
        vendor_name = invoice_data.get("vendor_name", "Unknown Vendor")
        pdf.cell(0, 10, f"Vendor: {vendor_name}", ln=True)

        # --- Invoice Meta Data ---
        pdf.set_font("Helvetica", "", 11)
        pdf.cell(0, 8, f"Invoice Number: {invoice_data.get('invoice_number', 'N/A')}", ln=True)
        pdf.cell(0, 8, f"Invoice Date: {invoice_data.get('invoice_date', 'N/A')}", ln=True)
        pdf.ln(6)

        # --- Line Items ---
        items = invoice_data.get("items", [])
        if items:
            pdf.set_font("Helvetica", "B", 12)
            pdf.cell(0, 10, "Items:", ln=True)
            pdf.set_font("Helvetica", "", 11)

            # Table Header
            pdf.cell(100, 8, "Description", border=1)
            pdf.cell(40, 8, "Qty", border=1, align="C")
            pdf.cell(50, 8, "Amount", border=1, align="R")
            pdf.ln(8)

            # Table Rows
            for item in items:
                description = str(item.get("description", "-"))
                quantity = str(item.get("quantity", "1"))
                amount = str(item.get("amount", "0.00"))

                pdf.cell(100, 8, description, border=1)
                pdf.cell(40, 8, quantity, border=1, align="C")
                pdf.cell(50, 8, amount, border=1, align="R")
                pdf.ln(8)
        else:
            pdf.set_font("Helvetica", "I", 11)
            pdf.cell(0, 8, "No items found.", ln=True)

        pdf.ln(6)

        # --- Totals Section ---
        pdf.set_font("Helvetica", "B", 12)
        pdf.cell(0, 10, "Summary:", ln=True)
        pdf.set_font("Helvetica", "", 11)
        pdf.cell(0, 8, f"Subtotal: {invoice_data.get('subtotal', 'N/A')}", ln=True)
        pdf.cell(0, 8, f"Tax: {invoice_data.get('tax', 'N/A')}", ln=True)
        pdf.cell(0, 8, f"Total: {invoice_data.get('total', 'N/A')}", ln=True)

        # --- Footer ---
        pdf.ln(10)
        pdf.set_font("Helvetica", "I", 9)
        pdf.cell(0, 10, "Generated by Multilanguage Invoice Generator", ln=True, align="C")

        return pdf

    except Exception as e:
        st.error(f"‚ùå PDF Error: {e}")
        return None


def create_download_link(pdf, filename):
    """
    Convert the generated PDF into a downloadable Streamlit link.
    """
    try:
        with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp:
            pdf.output(tmp.name)
            with open(tmp.name, "rb") as f:
                base64_pdf = base64.b64encode(f.read()).decode()

            href = (
                f'<a href="data:application/pdf;base64,{base64_pdf}" '
                f'download="{filename}" style="text-decoration:none; font-size:16px;">'
                f'üìÑ Download PDF Invoice Summary</a>'
            )
            return href

    except Exception as e:
        st.error(f"‚ùå Error creating download link: {e}")
        return None
